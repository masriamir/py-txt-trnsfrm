# Flask Application Configuration
# Copy this file to .env and modify the values as needed

# Flask Environment Configuration
# Options: development, production, testing
FLASK_ENV=development

# Flask Debug Mode (only for development)
# Options: true, false, 1, 0, yes, no
FLASK_DEBUG=true

# Application Secret Key
# CRITICAL: Change this to a secure random value for production!
# Generate with: python -c "import secrets; print(secrets.token_hex(32))"
SECRET_KEY=dev-secret-key-change-in-production

# Logging Configuration
# Options: debug, info, warning, error, critical
LOG_LEVEL=info

# Server Configuration
# Port for the Flask development server and Makefile commands
PORT=5000

# Makefile Configuration Variables
# =============================================================================
# These variables control Makefile behavior and can override defaults

# Server Configuration for Makefile commands
# HOST=127.0.0.1                          # Server host binding (default: 127.0.0.1)

# Testing Configuration
# MARKERS="not slow and not test_transform_property_based"  # Pytest markers for test filtering
# TIMEOUT=300                              # Command timeout in seconds (default: 300)
# VERBOSE=0                                # Enable verbose output (0/1, default: 0)
# DEBUG=0                                  # Enable debug mode (0/1, default: 0)

# Docker Configuration
# DOCKER_IMAGE=py-txt-trnsfrm              # Docker image name (default: py-txt-trnsfrm)
# DOCKER_TAG=latest                        # Docker image tag (default: latest)

# Production Server Configuration (Gunicorn)
# Number of worker processes (auto-detected if not set)
WEB_CONCURRENCY=auto

# Worker memory limit (default: 512MB)
# WORKER_MEMORY_LIMIT=536870912

# PID file location for Gunicorn process management
# Defaults to secure system directories (/var/run, /run) with fallback to current directory
# GUNICORN_PIDFILE=/var/run/gunicorn.pid

# SSL Configuration (for production with custom certificates)
# SSL_KEY_FILE=/path/to/key.pem
# SSL_CERT_FILE=/path/to/cert.pem

# Cloud Platform Detection Variables
# These are automatically set by cloud platforms for environment detection
# Used by the application for logging and platform-specific optimizations
# DYNO=web.1                           # Heroku dyno identifier
# WEB_MEMORY=512M                      # Heroku dyno memory allocation
# KUBERNETES_SERVICE_HOST=10.0.0.1     # Kubernetes cluster indicator
# K_SERVICE=py-txt-trnsfrm             # Google Cloud Run service name
# AWS_LAMBDA_FUNCTION_NAME=py-txt-trnsfrm # AWS Lambda function name

# Performance Testing Configuration
# Used by tests/performance/test_api_performance.py
# BASE_URL=http://localhost:5000
# CONCURRENT_USERS=5
# TEST_TIMEOUT=10
# LOAD_TEST_DURATION=30
# REQUESTS_PER_SECOND=2